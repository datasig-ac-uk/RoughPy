
[project]
name = "RoughPy"
version = "0.0.1"
author = "The RoughPy Authors"
author_email = "info@datasig.ac.uk"
license = {file = "LICENSE.txt" }
keywords = [
    "data",
    "streams",
    "rough paths",
    "signatures"
]

include_package_data = true
packages = ["roughpy"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Mathematics",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS"
]
#dependencies=[
#    "intel-openmp; platform_system!='Windows'"
#]

[build-system]
requires = [
    "scikit-build-core[pyproject]",
    "ninja; platform_system!='Windows'",
    "oldest-supported-numpy",
    "mkl-devel",
    "mkl-static",
    "intel-openmp; platform_system!='Windows'"
]
build-backend = "scikit_build_core.build"


[tool.scikit-build]
wheel.packages = []
cmake.build-type = "Release"

[tool.scikit-build.cmake.define]
ROUGHPY_BUILD_TESTS = "OFF"

[tool.cibuildwheel]
skip = [
    "*win32",
    "*-musl*",
    "pp*",
    "*linux_i686",
    "*arm64",
    "*universal2",
    "cp3{6,7}-*"
]
build-verbosity=1

test-requires = ["pytest", "numpy"]
test-command = [
    "ls -al `python -c 'import site; print(*site.getsitepackages())'`/roughpy",
    "pytest --capture=no {project}/tests || echo 0"
]
before-all = "bash tools/ci/before-all-common.sh"
environment= "CMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake VCPKG_OVERLAY_TRIPLETS=./tools/ci/triplets"

[tool.cibuildwheel.windows]
before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair -w {dest_dir} --ignore-in-wheel {wheel}"


[tool.cibuildwheel.linux]
repair-wheel-command = "auditwheel show {wheel} && auditwheel repair -w {dest_dir} {wheel}"
test-command = [
    "ls -al `python -c 'import site; print(*site.getsitepackages())'`/roughpy",
    "readelf -d `python -c 'import site; print(site.getsitepackages()[0])'`/roughpy/_roughpy.cpython-310-x86_64-linux-gnu.so",
    "ldd `python -c 'import site; print(site.getsitepackages()[0])'`/roughpy/_roughpy.cpython-310-x86_64-linux-gnu.so",
    "pytest --capture=no {project}/tests || echo 0"
]
