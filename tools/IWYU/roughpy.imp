

[

  # C++ re-exports of C headers - from the include-what-you-use repo
  { "include": [ "<assert.h>", "public", "<cassert>", "public"] },
  { "include": [ "<complex.h>", "public", "<ccomplex>", "public"] },
  { "include": [ "<ctype.h>", "public", "<cctype>", "public"] },
  { "include": [ "<errno.h>", "public", "<cerrno>", "public"] },
  { "include": [ "<fenv.h>", "public", "<cfenv>", "public"] },
  { "include": [ "<float.h>", "public", "<cfloat>", "public"] },
  { "include": [ "<inttypes.h>", "public", "<cinttypes>", "public"] },
  { "include": [ "<iso646.h>", "public", "<ciso646>", "public"] },
  { "include": [ "<limits.h>", "public", "<climits>", "public"] },
  { "include": [ "<locale.h>", "public", "<clocale>", "public"] },
  { "include": [ "<math.h>", "public", "<cmath>", "public"] },
  { "include": [ "<setjmp.h>", "public", "<csetjmp>", "public"] },
  { "include": [ "<signal.h>", "public", "<csignal>", "public"] },
  { "include": [ "<stdalign.h>", "public", "<cstdalign>", "public"] },
  { "include": [ "<stdarg.h>", "public", "<cstdarg>", "public"] },
  { "include": [ "<stdbool.h>", "public", "<cstdbool>", "public"] },
  { "include": [ "<stddef.h>", "public", "<cstddef>", "public"] },
  { "include": [ "<stdint.h>", "public", "<cstdint>", "public"] },
  { "include": [ "<stdio.h>", "public", "<cstdio>", "public"] },
  { "include": [ "<stdlib.h>", "public", "<cstdlib>", "public"] },
  { "include": [ "<string.h>", "public", "<cstring>", "public"] },
  { "include": [ "<tgmath.h>", "public", "<ctgmath>", "public"] },
  { "include": [ "<time.h>", "public", "<ctime>", "public"] },
  { "include": [ "<uchar.h>", "public", "<cuchar>", "public"] },
  { "include": [ "<wchar.h>", "public", "<cwchar>", "public"] },
  { "include": [ "<wctype.h>", "public", "<cwctype>", "public"] },

  # Boost headers
  { "include": [ "<boost/smart_ptr/detail/operator_bool.hpp>", "private", "<boost/smart_ptr/intrusive_ptr.hpp>", "public" ]},
  { "include": [ "<boost/multiprecision/detail/number_compare.hpp>", "private", "<boost/multiprecision/number.hpp>", "public" ]},
  { "include": [ "<boost/multiprecision/detail/et_ops.hpp>", "private", "<boost/multiprecision/number.hpp>", "public" ]},

  # OpenCL headers
  { "include": [ "<CL/cl_platform.h>", "private", "<CL/cl.h>", "public" ]},

  # Core headers
  { "include": [ "<type_traits>", "public", "<roughpy/core/traits.h>", "public" ]},
  { "include": [ "<cstdint>", "public", "<roughpy/core/types.h>", "public" ]},
  { "include": [ "<optional>", "public", "<roughpy/core/optional.h>", "public" ]},
  { "include": [ "<string>", "public", "<roughpy/core/types.h>", "public" ]},
  { "include": [ "<string_view>", "public", "<roughpy/core/types.h>", "public" ]},
  { "include": [ "<utility>", "public", "<roughpy/core/types.h>", "public" ]},

  # Platform headers
  { "include": [ "<boost/stacktrace.hpp>", "public", "<roughpy/platform/errors.h>", "public" ]},
  { "include": [ "<filesystem>", "public", "<roughpy/platform/filesystem.h>", "public"]},
  { "include": [ "<Cl/cl.h>", "public", "<devices/opencl/ocl_headers.h>", "private"]},

  # Devices predefines
  { "symbol": [ "Buffer", "public", "<roughpy/platform/devices/core.h>", "public"]},
  { "symbol": [ "BufferInterface", "public", "<roughpy/platform/devices/core.h>", "public"]},
  { "symbol": [ "Event", "public", "<roughpy/platform/devices/core.h>", "public"]},
  { "symbol": [ "EventInterface", "public", "<roughpy/platform/devices/core.h>", "public"]},
  { "symbol": [ "KernelArgument", "public", "<roughpy/platform/devices/core.h>", "public"]},
  { "symbol": [ "Kernel", "public", "<roughpy/platform/devices/core.h>", "public"]},
  { "symbol": [ "KernelInterface", "public", "<roughpy/platform/devices/core.h>", "public"]},
  { "symbol": [ "MemoryView", "public", "<roughpy/platform/devices/core.h>", "public"]},
  { "symbol": [ "Queue", "public", "<roughpy/platform/devices/core.h>", "public"]},
  { "symbol": [ "QueueInterface", "public", "<roughpy/platform/devices/core.h>", "public"]},

]